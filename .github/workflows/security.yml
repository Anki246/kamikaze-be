name: Kamikaze AI - Security Scanning

on:
  schedule:
    # Run security scans daily at 2 AM UTC
    - cron: '0 2 * * *'
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.11'

jobs:
  # ============================================================================
  # DEPENDENCY VULNERABILITY SCANNING
  # ============================================================================
  
  dependency-scan:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install safety
        
    - name: Run Safety check
      run: |
        echo "🛡️ Scanning dependencies for known vulnerabilities..."
        safety check --json --output safety-report.json || true
        safety check --short-report
        
    - name: Upload Safety report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: safety-report-${{ github.run_number }}
        path: safety-report.json
        retention-days: 90

  # ============================================================================
  # CODE SECURITY SCANNING
  # ============================================================================
  
  code-security-scan:
    name: Code Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Install Bandit
      run: |
        python -m pip install --upgrade pip
        pip install bandit[toml]
        
    - name: Run Bandit security scan
      run: |
        echo "🔒 Running Bandit security scan..."
        bandit -r . -f json -o bandit-report.json || true
        bandit -r . -ll --severity-level medium
        
    - name: Upload Bandit report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: bandit-report-${{ github.run_number }}
        path: bandit-report.json
        retention-days: 90

  # ============================================================================
  # SECRETS SCANNING
  # ============================================================================
  
  secrets-scan:
    name: Secrets Scanning
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run TruffleHog OSS
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified

  # ============================================================================
  # CONTAINER SECURITY SCANNING
  # ============================================================================
  
  container-security-scan:
    name: Container Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Build Docker image
      run: |
        echo "🐳 Building Docker image for security scanning..."
        docker build -t kamikaze-ai-backend:security-scan .
        
    - name: Install Trivy
      run: |
        sudo apt-get update
        sudo apt-get install wget apt-transport-https gnupg lsb-release
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update
        sudo apt-get install trivy
        
    - name: Run Trivy vulnerability scanner
      run: |
        echo "🔍 Scanning Docker image for vulnerabilities..."
        trivy image --format json --output trivy-report.json kamikaze-ai-backend:security-scan || true
        trivy image --severity HIGH,CRITICAL kamikaze-ai-backend:security-scan
        
    - name: Upload Trivy report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: trivy-report-${{ github.run_number }}
        path: trivy-report.json
        retention-days: 90
        
    - name: Clean up Docker image
      run: |
        docker rmi kamikaze-ai-backend:security-scan || true

  # ============================================================================
  # CODEQL ANALYSIS
  # ============================================================================
  
  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    
    strategy:
      fail-fast: false
      matrix:
        language: [ 'python' ]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        
    - name: Autobuild
      uses: github/codeql-action/autobuild@v2
      
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"

  # ============================================================================
  # SECURITY SUMMARY
  # ============================================================================
  
  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [dependency-scan, code-security-scan, secrets-scan, container-security-scan, codeql-analysis]
    if: always()
    
    steps:
    - name: Generate security summary
      run: |
        echo "# 🔒 Kamikaze AI Security Scan Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## 📊 Scan Results" >> $GITHUB_STEP_SUMMARY
        echo "- **Dependency Scan**: ${{ needs.dependency-scan.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Code Security Scan**: ${{ needs.code-security-scan.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Secrets Scan**: ${{ needs.secrets-scan.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Container Security Scan**: ${{ needs.container-security-scan.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **CodeQL Analysis**: ${{ needs.codeql-analysis.result }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## 📋 Details" >> $GITHUB_STEP_SUMMARY
        echo "- **Scan Date**: $(date -u)" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Triggered by**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Determine overall security status
        if [[ "${{ needs.dependency-scan.result }}" == "success" && "${{ needs.code-security-scan.result }}" == "success" && "${{ needs.secrets-scan.result }}" == "success" && "${{ needs.container-security-scan.result }}" == "success" && "${{ needs.codeql-analysis.result }}" == "success" ]]; then
          echo "## ✅ Overall Security Status: PASSED" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "All security scans completed successfully. No critical vulnerabilities detected." >> $GITHUB_STEP_SUMMARY
        else
          echo "## ⚠️ Overall Security Status: ATTENTION REQUIRED" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "One or more security scans require attention. Please review the scan results and address any identified issues." >> $GITHUB_STEP_SUMMARY
        fi
        
    - name: Create security issue on failure
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          const title = `Security Scan Failed - ${new Date().toISOString().split('T')[0]}`;
          const body = `
          ## 🚨 Security Scan Failure Alert
          
          One or more security scans have failed. Please review the workflow results and address any identified security issues.
          
          **Workflow Run**: ${{ github.run_number }}
          **Commit**: ${{ github.sha }}
          **Branch**: ${{ github.ref_name }}
          **Triggered by**: ${{ github.event_name }}
          
          ### Failed Jobs:
          - Dependency Scan: ${{ needs.dependency-scan.result }}
          - Code Security Scan: ${{ needs.code-security-scan.result }}
          - Secrets Scan: ${{ needs.secrets-scan.result }}
          - Container Security Scan: ${{ needs.container-security-scan.result }}
          - CodeQL Analysis: ${{ needs.codeql-analysis.result }}
          
          Please check the [workflow run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for detailed results.
          `;
          
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: title,
            body: body,
            labels: ['security', 'bug', 'high-priority']
          });
